# -*- coding: utf-8 -*-
"""Untitled13.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oN1ZGsA4itUWmE6Cc8RGHzzGS5krrKQM
"""

import numpy as np
import pandas as pd
from sklearn.preprocessing import LabelEncoder
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
import pickle
data= pd.read_csv("credit.csv")
train=data.drop(["SSN","Age","Changed_Credit_Limit","Num_Credit_Inquiries",
                  "ID","Customer_ID","Month","Name","Type_of_Loan","Occupation",
                 "Amount_invested_monthly","Credit_Utilization_Ratio",
                  "Payment_Behaviour","Payment_of_Min_Amount",
                  "Monthly_Inhand_Salary"],axis=1)
train["Num_of_Loan"] = train["Num_of_Loan"].astype(int)
train["Num_Bank_Accounts"] =train["Num_Bank_Accounts"].astype(int)
train["Credit_History_Age"] = train["Credit_History_Age"].astype(int)
train["Num_Credit_Card"] = train["Num_Credit_Card"].astype(int)
train["Delay_from_due_date"] = train["Delay_from_due_date"].astype(int)
train["Num_of_Delayed_Payment"] = train["Num_of_Delayed_Payment"].astype(int)
le= LabelEncoder()
train["Credit_Score"] = le.fit_transform(train["Credit_Score"])
train["Credit_Mix"] = le.fit_transform(train["Credit_Mix"])

X = train.drop(["Credit_Score"],axis=1)
Y = pd.DataFrame(train["Credit_Score"])

Y= np.squeeze(Y)

x_train,x_test,y_train,y_test = train_test_split(X,Y, test_size = 0.3, random_state=42)

rf_cls =RandomForestClassifier()

model = rf_cls.fit(x_train,y_train)

y_pred_rf = model.predict(x_test)

filename="model.pkl"

with open(filename,"wb") as file:
   pickle.dump(model,file)